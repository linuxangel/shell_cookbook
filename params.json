{"name":"Shell cookbook","tagline":"让你的shell 风生水起","body":"#贡献者：隋成龙\r\n#编辑整理：邢耀东\r\n######第一章Shell  之讨厌的正则 \r\n \r\n*  思想（KISS）相当重要.\r\n*\t我们遵循KISS原则  （keep it simple，stupid） \r\n*   这事其实不难，只要按照以下思路进行就行了。 \r\n\r\n>1.  把复杂的问题简单化，模块化 \r\n>2.  写出每一个模块的伪码。 \r\n>3.  组装你的模块 \r\n>4.  写出shell code \r\n>5.   测试（test） \r\n\r\n\r\n####知道什么时候用什么实现，远比你知道怎么写code更重要。（shell不是万能的，择优取之。\r\n####shell最精华，最美的地方在于有现成的命令可以使用，不用考虑过多的底层的问题。作为上\r\n####层工作的最好的工具，所谓上层系统管理，网络管理等等。） \r\n\r\n###战略决定生死，细节决定成败 \r\n##以下是我们以后将要更新的章节\r\n\r\n*\t讨厌的正则\r\n*\t可爱的变量\r\n*\t简单明了的输入输出\r\n*\t神奇的判断\r\n*\t不可不会的文件操作\r\n*\t瞬间飞升\r\n\r\n###第一节讨厌的正则\r\n\r\n*    之所以讨厌一个事物，是因为你驾驭不了它。\r\n\r\n>1.\t乱七八糟的符号。\r\n>       举例：（grep  为行模式，默认以行显示）\r\n>\r\n>>  (1)\r\n>>\t`[root@localhost ~]# cat /etc/passwd | grep --color \"r..t\"`\r\n>\t`root:x:0:0:root:/root:/bin/bash`\r\n>\t`operator:x:11:0:operator:/root:/sbin/nologin`\r\n>\t`ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin`\r\n>\t`You have new mail in /var/spool/mail/root`\r\n>\t`[root@localhost ~]#`\r\n>\r\n显示三行\r\n\r\n>>  (2)\r\n>>\t`[root@localhost ~]# cat /etc/passwd | grep --color 'root'`\r\n>\t`root:x:0:0:root:/root:/bin/bash`\r\n>\t`operator:x:11:0:operator:/root:/sbin/nologin`\r\n>\t`[root@localhost ~]# `\r\n>\t\r\n>显示两行\r\n>>\t(3)\r\n>>\t`[root@localhost ~]# cat /etc/passwd | grep --color '^root'`\r\n>`root:x:0:0:root:/root:/bin/bash`\r\n>`[root@localhost ~]# `\r\n> \r\n> 显示一行  \r\n> \r\n>*\t总结以上`:`什么是正则，两个单引号中间的部分就是正则。 \r\n> \r\n\r\n*\t正则有什么用？ \r\n\r\n> 1.\t查找匹配 \r\n>> 1)一个字符（如何在整篇文章中查找一个字符），正则提供了一些特殊符号，通过这\r\n些符号去替换一些东西.\r\n>>\r\n>举例：在整篇文章中查找字母a \r\n>\t\t\r\n>>使用vi编辑器打开/etc/passwd \r\n\r\n>>在末行模式下查找a \r\n>输入   ：/a/  \r\n>比如要查找abc，是一个或的关系,那么用 [ ] 。  \r\n>>输入  ：/[abc]/      \r\n>    ：/[a-c]/  \r\n>\t：/a|b|c/\r\n>\r\n>>中括号，把你想要定位的东西写入里面。\r\n> \r\n>>`.`\t任意一个字符。 \r\n> \r\n>>`[]`  选择中括号里面的任意一个。 \r\n> \r\n>>`[^]`  取非，取反 \r\n> \r\n>>`[:alnum:]`阿尔法字符加数字 \r\n> \r\n>>`[:alpha:]`任意一个字符`[[:alpha]]` \r\n> \r\n>>`[:digit:]`任意一个数字 `[[:digit:]]`（对它取反的话`[^[:digit:]]`）意为除了任意一个数字。 \r\n> \r\n>>`[:lower:]`小写。  \r\n> \r\n>>`[:upper:]`大写。\r\n>\r\n>>`[:space:]`空格。\r\n>\r\n>>`[:punct:]`标点。\r\n>\r\n>>*\t总结`：`以上是如何定位一个字符。\r\n>\r\n> \r\n> \r\n> \r\n> \r\n> \r\n> \r\n> \r\n> \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}